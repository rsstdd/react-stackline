// --------------------------------------------------
// mixins
// --------------------------------------------------
//
// --------------------------------------------------
// grid generation mixins
// --------------------------------------------------

@mixin make-grid($class) {
  @include loop-columns($grid-columns, $class, width);
}

@mixin calc-columns($index, $class, $type) {
  @if $type == width and $index > 0 {
    .#{$class}#{$index} {
      width: percentage(($index / $grid-columns));
      *width: percentage(($index / $grid-columns)) - .1; // ie7 css hack
    }
  }
}

@mixin loop-columns($index, $class, $type) {
  @if $index >= 0 {
    @include calc-columns($index, $class, $type);
    @include loop-columns(($index - 1), $class, $type);
  }
}

// defaults for auto cols
@mixin setup-auto-cols() {
  @include flex(1, 0, 0px); // a unit on last value is required by IE10-11
  width: auto;
}

// --------------------------------------------------
// inline-block specific mixins
// --------------------------------------------------

@mixin setup-whitespace() {
  letter-spacing: -.31em;
  *letter-spacing: normal;
  word-spacing: -.43em;
}

@mixin reset-whitespace() {
  letter-spacing: normal;
  word-spacing: normal;
  white-space: normal;
}

@mixin reset-text-align() {
  text-align: left;
  text-align: start;
  -moz-text-align-last: left;
  -moz-text-align-last: start;
  text-align-last: left;
  text-align-last: start;
}

// --------------------------------------------------
// order class generation mixins
// --------------------------------------------------

@mixin order($order: 0) {
  -ms-flex-order: $order;
  -webkit-order: $order;
  order: $order;
}

@mixin make-order-helpers() {
  @include loop-order-helpers($grid-columns);
}

@mixin loop-order-helpers($index, $breakpoint: null) {
  @if $index >= 0 {
    .order-#{$index}#{$breakpoint} {
        @include order($index);
    }
    // next iteration
    @include loop-order-helpers(($index - 1), $breakpoint);
  }
}

// --------------------------------------------------
// reflex modifier mixins
// --------------------------------------------------

//
// display
// ---

@mixin display-flex() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

//
// flex
// ---------------------------------------------

@mixin flex($grow: 0, $shrink: 1, $basis: auto) {
  @if $basis == 0 {
    -ms-flex: $grow $shrink auto; //ie10 needs auto
  } @else {
    -ms-flex: $grow $shrink $basis;
  }

  -webkit-flex: $grow $shrink $basis;
  flex: $grow $shrink $basis;
}

@mixin flex-grow($grow:1) {
  -ms-flex-positive: $grow;
  -webkit-flex-grow: $grow;
  flex-grow: $grow;
}

@mixin flex-shrink($shrink:1) {
  -ms-flex-negative: $shrink;
  -webkit-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

@mixin flex-basis($basis:auto) {
  -ms-flex-preferred-size: $basis;
  -webkit-flex-basis: $basis;
  flex-basis: $basis;
}

@mixin flex-flow($direction: row, $wrap: nowrap) {
  -ms-flex-wrap: $wrap;
  -ms-flex-direction: $direction;
  -webkit-flex-flow: $direction $wrap;
  flex-flow: $direction $wrap;
}

@mixin flex-wrap($wrap: wrap) {
  -ms-flex-wrap: $wrap;
  -webkit-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

@mixin flex-direction($direction: row) {
  -ms-flex-direction: $direction;
  -webkit-flex-direction: $direction;
  flex-direction: $direction;
}

//
// align
// ----------------------------------

@mixin align-items($align: stretch) {
  @include ms-align-items($align);
  -webkit-align-items: $align;
  align-items: $align;
}

@mixin align-self($align: stretch) {
  @include ms-align-self($align);
  -webkit-align-self: $align;
  align-self: $align;
}

@mixin align-content($align: stretch) {
  @include ms-align-content($align);
  -webkit-align-content: $align;
  align-content: $align;
}

//
// ie10 syntax for align
// ------------------------------------

@mixin ms-align-items($align) {
  @if $align == 'flex-start' {
    -ms-flex-align: start;
  } @else if $align == 'flex-end' {
    -ms-flex-align: end;
  } @else {
    -ms-flex-align: $align;
  }
}

@mixin ms-align-self($align) {
  @if $align == 'flex-start' {
    -ms-flex-item-align: start;
  } @else if $align == 'flex-end' {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $align;
  }
}

@mixin ms-align-content($align) {
  @if $align == 'flex-start' {
    -ms-flex-line-pack: start;
  } @else if $align == 'flex-end' {
    -ms-flex-line-pack: end;
  } @else if $align == 'space-between' {
    -ms-flex-line-pack: justify;
  } @else if $align == 'space-around' {
    -ms-flex-line-pack: distribute;
  } @else {
    -ms-flex-line-pack: $align;
  }
}

//
// justify-content
// -----------------

@mixin justify-content-start() {
  -ms-flex-pack: start;
  -webkit-justify-content: flex-start;
  justify-content: flex-start;
}

@mixin justify-content-end() {
  -ms-flex-pack: end;
  -webkit-justify-content: flex-end;
  justify-content: flex-end;
}

@mixin justify-content-center() {
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}

@mixin justify-content-space-between() {
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

@mixin justify-content-space-around() {
  -ms-flex-pack: distribute;
  -webkit-justify-content: space-around;
  justify-content: space-around;
}

// --------------------------------------------------
// other mixins
// --------------------------------------------------

@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
  -moz-box-sizing: $boxmodel;
  box-sizing: $boxmodel;
}

@mixin responsive-visibility-helpers() {
  @if $visibility-helpers == true {
    .hidden-xxs {
      @media (max-width: $grid-xxs-max) {
        display: none;
      }
    }

    .hidden-xs {
      @media (min-width: $grid-xs) and (max-width: $grid-xs-max) {
        display: none;
      }
    }

    .hidden-sm {
      @media (min-width: $grid-sm) and (max-width: $grid-sm-max) {
          display: none;
      }
    }

    .hidden-md {
      @media (min-width: $grid-md) and (max-width: $grid-md-max) {
        display: none;
      }
    }

    .hidden-lg {
      @media (min-width: $grid-lg) {
        display: none;
      }
    }
  }
}
